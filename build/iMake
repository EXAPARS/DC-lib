#!/bin/bash

#  Copyright 2014 - UVSQ
#  Authors list: Loïc Thébault, Eric Petit
#
#  This file is part of the DC-lib.
#
#  DC-lib is free software: you can redistribute it and/or modify it under the
#  terms of the GNU Lesser General Public License as published by the Free Software
#  Foundation, either version 3 of the License, or (at your option) any later version.
#
#  DC-lib is distributed in the hope that it will be useful, but WITHOUT ANY
#  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
#  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License along with
#  the DC-lib. If not, see <http://www.gnu.org/licenses/>.

# Libraries path
GASPI_PATH="$HOME/Programs/GPI-2"
GASPI_INCLUDE="$GASPI_PATH/include"
METIS_PATH="$HOME/Programs/METIS"
METIS_INCLUDE="$METIS_PATH/include"

# Case insensitive comparisons
shopt -s nocasematch

# Check number of arguments
if [ $# -eq 0 ]; then
    echo -e "\\033[1;31mPlease specify:"
    echo -e " - The distributed memory library (MPI or GASPI)"
    echo -e " - The shared memory runtime (Cilk or OpenMP) \\033[0;39m"
    exit
fi

# Parse arguments
BULK=0
VECTO=0
ARCHI=0
TREE=0
STATS=0
DEBUG=0
VERBOSE=0
DISTRI=0
SHARED=0

for i in $@; do
    if [[ $i == "clean" ]]; then
        rm -r CMakeCache.txt CMakeFiles/ cmake_install.cmake Makefile \
              external_files.mod mod_qvddump.mod 2> /dev/null
        echo -e "\\033[1;32mBuild directory has been cleaned up\\033[0;39m"
        exit
    elif [[ $i == "mrproper" ]]; then
        rm -r CMakeCache.txt CMakeFiles/ cmake_install.cmake Makefile ../lib/* \
              external_files.mod mod_qvddump.mod 2> /dev/null
        echo -e "\\033[1;32mBuild & lib directories have been cleaned up\\033[0;39m"
        exit
    elif [[ $i == "bulk" ]]; then
        BULK=1
    elif [[ $i == "vec" ]] || [[ $i == "vecto" ]]; then
        VECTO=1
    elif [[ $i == "sse" ]]; then
        ARCHI="SSE"
    elif [[ $i == "avx" ]]; then
        ARCHI="AVX"
    elif [[ $i == "knc" ]]; then
        ARCHI="KNC"
    elif [[ $i == "knl" ]]; then
        ARCHI="KNL"
    elif [[ $i == "tree" ]]; then
        TREE=1
    elif [[ $i == "stat" ]] || [[ $i == "stats" ]]; then
        STATS=1
    elif [[ $i == "debug" ]] || [[ $i == "dbg" ]]; then
        DEBUG=1
    elif [[ $i == "verbose" ]]; then
        VERBOSE=1
    elif [[ $i == "mpi" ]] || [[ $i == "xmpi" ]]; then
        DISTRI="XMPI"
        BULK=1
    elif [[ $i == "gaspi" ]]; then
        DISTRI="GASPI"
    elif [[ $i == "cilk" ]]; then
        SHARED="CILK"
    elif [[ $i == "openmp" ]] || [[ $i == "omp" ]]; then
        SHARED="OMP"
    else
   	    echo -e "\\033[1;31mOption \"$i\" has been ignored\\033[0;39m"
    fi
done

# Check arguments
if [[ $VECTO == 1 ]] && [[ $ARCHI == 0 ]]; then
    echo -e "\\033[1;31mPlease specify the vector length (SSE, AVX, KNC, KNL)\\033[0;39m"
    exit
fi
if [[ $TREE == 1 ]] && [[ ! -d "$METIS_PATH" ]]; then
    echo -e "\\033[1;31mIncorrect path to the METIS library\\033[0;39m"
    exit
fi
if [[ $DISTRI != "xmpi" ]] && [[ $DISTRI != "gaspi" ]]; then
    echo -e "\\033[1;31mPlease specify the distributed memory library (MPI or GASPI) \
             \\033[0;39m"
    exit
fi
if [[ $SHARED != "cilk" ]] && [[ $SHARED != "omp" ]]; then
    echo -e "\\033[1;31mPlease specify the shared memory runtime (Cilk or OpenMP) \
             \\033[0;39m"
    exit
fi

# Cross compile for KNC
if [[ $ARCHI == "knc" ]]; then
	export CXX=icpc
	export CFLAGS="-mmic"
	export CXXFLAGS=$CFLAGS
	export FFLAGS=$CFLAGS
	export MPI_C=mpiicc
	export MPI_CXX=mpiicpc

    if [[ $TREE == 1 ]]; then
        cmake -DCMAKE_TOOLCHAIN_FILE="./cmake_template.cmake" \
              -DGASPI_INCLUDE=$GASPI_INCLUDE -DMETIS_INCLUDE=$METIS_INCLUDE \
              -DDISTRI=$DISTRI -DSHARED=$SHARED -DVECTO=$VECTO -DARCHI=$ARCHI \
              -DBULK=$BULK -DTREE=$TREE -DSTATS=$STATS -DDEBUG=$DEBUG \
              -DVERBOSE=$VERBOSE \
              . -G "Unix Makefiles"
    else
        cmake -DCMAKE_TOOLCHAIN_FILE="./cmake_template.cmake" \
              -DGASPI_INCLUDE=$GASPI_INCLUDE -DDISTRI=$DISTRI -DSHARED=$SHARED \
              -DVECTO=$VECTO -DARCHI=$ARCHI -DBULK=$BULK -DTREE=$TREE -DSTATS=$STATS \
              -DDEBUG=$DEBUG -DVERBOSE=$VERBOSE \
              . -G "Unix Makefiles"
    fi
else
    if [[ $TREE == 1 ]]; then
        cmake -DGASPI_INCLUDE=$GASPI_INCLUDE -DMETIS_INCLUDE=$METIS_INCLUDE \
              -DDISTRI=$DISTRI -DSHARED=$SHARED -DVECTO=$VECTO -DARCHI=$ARCHI \
              -DBULK=$BULK -DTREE=$TREE -DSTATS=$STATS -DDEBUG=$DEBUG \
              -DVERBOSE=$VERBOSE \
              . -G "Unix Makefiles"
    else
        cmake -DGASPI_INCLUDE=$GASPI_INCLUDE -DDISTRI=$DISTRI -DSHARED=$SHARED \
              -DVECTO=$VECTO -DARCHI=$ARCHI -DBULK=$BULK -DTREE=$TREE -DSTATS=$STATS \
              -DDEBUG=$DEBUG -DVERBOSE=$VERBOSE \
              . -G "Unix Makefiles"
    fi
fi

# Compile
make -j 2
